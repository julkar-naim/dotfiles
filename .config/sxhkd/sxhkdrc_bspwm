#
# bspwk hotkeys
#

# Dynamic desktop behaviour:  this invokes a script of mine that
# implements dynamic desktops (see dotfiles).  If the given desktop
# number is missing, it is created on the spot.  Empty desktops are then
# removed automatically.
#
#
# mod3 + <number> = focus the given desktop
# mod3 + shift + <number> = send focused window to given desktop
# mod3 + ctrl + shift + <number> = as above, but send to next monitor
# mod3 + ctrl + <number> = switches the active (visible) desktop of the
# unfocused monitor, without focusing it (focus stays on the current
# desktop/monitor).  It also inserts a receptacle, meaning that the next
# created window will go there without calling focus to itself (see my
# bspwm_external_rules).
#
#
# Commands for receptacles are defined in the "advanced operations"
# section.
#
# NOTE the leading `;` runs this command asynchronously.
#
# NOTE2 the script also offers commands for sending to a desktop on the
# current or the next monitor and following it right away.  The
# shorthand for those is `--nsf' and `--nmf' respectively.  A
# commented-out version is provided below the enabled key bindings,
# which replaces the "send" commands noted above with their
# "send+follow" equivalents.
# alt + {_,shift + ,ctrl + shift +,ctrl +}{0-9}
# 	;bspwm_dynamic_workspace {--df,--ns,--nm,--da} {0-9}

## Use this for "send+follow" instead of just "send"
# mod3 + {_,shift + ,ctrl + shift +,ctrl +}{0-9}
# 	;bspwm_dynamic_desktops {--df,--nsf,--nmf,--da} {0-9}




# quit/restart bspwm
alt + super + {q,r}
	bspc {quit,wm -r}

# close and kill
alt + {_,shift + }q
	bspc node -{c,k}

# superernate between the tiled and monocle layout
alt + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
alt + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
alt + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
alt + shift + f
    bspc node -t fullscreen
alt + {t,shift + t,s}
	bspc node -t {tiled,pseudo_tiled,floating}

# set the node flags
alt + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
alt + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
#alt + {p,b,comma,period}
#	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
alt + {_,shift + }comma
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
alt + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
alt + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
alt + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
alt + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
alt + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
alt + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
alt + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
alt + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
alt + super + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
alt + super + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
alt + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
